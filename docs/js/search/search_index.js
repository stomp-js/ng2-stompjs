var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["0","2.4.0","20","20000","4.0.0","5","5.0.0","5000","_stompservic","activ","actual","add","addit","addition","angular","angular2","angular4","api","app_initi","appli","assign","assum","astha","async","attempt","auto","background","base","befor","behaviorsubject","benefit","broker","call","charalampidi","class","cli","close","code","cofig","come","compat","compon","config","configur","connect","consol","console.log(`receiv","console.log(`stomp","const","constructor","constructor(priv","consum","contributor","control","convert","copi","correspond","curiou","debug","deep","deepak","default","delay","demo","demo/blob/master/src/app/app.module.t","demo/tree/sockj","demonstr","depend","detail","diagnost","dimitri","disabl","disconnect","document","enum","establish","etc","even","everyon","exampl","feel","fetch","few","file","filter","finnigan","follow","free","gener","get","guest","hard","hash","header","heartbeat","heartbeat_in","heartbeat_out","host","http","https://angular.io/docs/ts/latest/guide/depend","https://github.com/stomp","https://stomp","https://www.rabbitmq.com/stomp.html","https://www.rabbitmq.com/web","import","index","initandconnect","initi","initstomp","inject","injection.html","instal","instead","interest","intern","interv","involv","ionic","jimi","js.github.io/ng2","js/ng2","js/ng4","js/stomp","json","json.stringifi","key","kumar","librari","licens","local","log","login","look","main","maintain","manual","map","map((stat","match","messag","message');pleas","message.bodi","method","millisecond","mit","modifi","more","msg_bodi","name","need","note","npm","number","observ","onc","oper","page","pass","passcod","per","pipe","plugin","possibl","potenti","prerequisit","process","project","provid","public","publish","publish(queuenam","queu","queue","rabbitmq","read","readi","reap","reconnect","reconnect_delay","report","resourc","result","return","run","sam","sampl","saveor","second","see","semant","send","server","servic","set","sever","sockj","specif","specifi","start","statu","stomp","stomp.html","stomp/ng2","stomp/stompj","stomp/stompjs';unsubscrib","stomp_subscript","stomp_subscription.map((messag","stompconfig","stomphead","stompj","stompjs/classes/stompservice.html","stompjs/classes/stompservice.html#publish","stompjs/classes/stompservice.html#subscrib","stompjs/index.html","stompjsthi","stomprservic","stompservic","stompservice.st","stompstate[st","string","structur","style","sub","subscrib","subscribe((msg_bodi","subscribe((statu","subscribe(queuenam","subscript","success","support","switch","techniqu","templat","test","this._stompservice.config","this._stompservice.connectobserv","this._stompservice.initandconnect","this._stompservice.publish('/topic/ng","this._stompservice.st","this._stompservice.subscribe('/topic/ng","this.fetchconfigfromsomewher","till","tri","true","typic","underli","unsubscrib","updat","url","us","usag","usevalu","usual","valu","vari","version","viaclass","wait","watch","way","web","websocket","well","work","wrapper","ws://127.0.0.1:15674/w","yarn","yourclass"],"overview.html":["3","inject","match","overview","result"],"changelog.html":["0.3.0","0.3.4","0.3.5","0.3.8","0.4.0","0.4.2","0.4.3","0.6.0","0.6.1","0.6.2","5","abil","ad","angular","api","app_initi","appreci","bundl","case","chang","changelog","compat","compil","compliant","configur","connect","correctli","current","delay","demo/tree/sockj","depend","directli","distribut","document","enabl","file","frame","futur","get","github","header","help","https://github.com/stomp","https://stomp","improv","indic","initi","inject","js","js.github.io/ng2","js/ng2","js/ng4","jump","karma","longer","main","make","match","merg","now","npm","number","page","part","possibl","project","publish","refer","releas","repositori","result","sampl","server","servic","sockj","sourc","start","stompconfig","stompconfigservic","stompj","stompjs/classes/stomprservice.html#serverheadersobserv","stompservic","structur","subscrib","support","switch","test","testb","travi","ts","typedoc","unabl","updat","us","user/password","version","way"],"license.html":["2017","abov","action","and/or","aris","associ","author","c","charg","claim","condit","connect","contract","copi","copyright","damag","deal","deepak","distribut","document","event","express","file","fit","follow","free","furnish","get","grant","herebi","holder","impli","includ","kind","kumar","liabil","liabl","licens","limit","match","merchant","merg","mit","modifi","noninfring","notic","obtain","otherwis","out","particular","permiss","permit","person","portion","provid","publish","purpos","restrict","result","right","sell","shall","softwar","start","subject","sublicens","substanti","tort","us","warranti","whether","without"],"modules.html":["match","modul","result"],"injectables/StompConfig.html":["0","20","20000","5","5000","altern","angular/cor","attempt","auto","befor","boolean","broker","class","client","configur","connect","debug","default","defin","descript","detail","disabl","document","enabl","exampl","export","file","function","header","heartbeat","heartbeat_in","heartbeat_out","host","host:str","import","incom","index","info","inject","instanc","interv","key","localhost","login","match","millisecond","neeed","new","number","object","outgo","paramet","pass","passcod","pleas","properti","rabbitmq","reconnect","reconnect_delay","refer","repres","result","return","run","second","server","set","setup","similar","sockj","sockjs('http://127.0.0.1:15674/stomp","sourc","src/stomp.config.t","src/stomp.config.ts:24","src/stomp.config.ts:31","src/stomp.config.ts:38","src/stomp.config.ts:46","src/stomp.config.ts:54","src/stomp.config.ts:57","stomp","stompconfig","stomphead","stompservic","string","type","typic","url","valu","virtual","wait","websocket","ws://127.0.0.1:15674/w"],"injectables/StompRService.html":["_config","_serverheadersbehavioursubject","accessor","ack","acknowledg","activ","actual","addition","alreadi","alway","angular/cor","angular2","arg","array","articl","asynchron","attempt","auto","beat","beautifulli","behaviorsubject","behaviorsubject(nul","behaviorsubject(stompstate.clos","behavioursubject","boolean","broker","call","callback","caller","carri","check","class","clean","cleanup","client","close","closur","code","cold","coldobserv","coldobservable.shar","commun","complic","config","config(valu","configur","connect","connectobserv","console.log(new","const","constructor","convert","creat","current","currentst","date","debug","default","defaultmessagesobserv","defin","depend","descript","design","destin","disconnect","do","drop","dure","emit","end","error","error).bodi","errorsubject","es6","establish","even","event","exampl","explanatori","explicitli","export","f8094ed53339","field","file","filter","filter((currentst","filter((head","first().subscribe((fram","frame","frame.headers['receipt","function","further","get","good","handl","happen","header","headers['ack","heart","hold","hot","https://medium.com/@benlesh/hot","id","ignor","immedi","implement","import","includ","inde","index","indic","info","initandconnect","initi","initstompcli","inject","insid","intern","issu","know","leav","left","lexic","librari","liter","local","logic","long","made","magic","match","mean","messag","messages.next(messag","method","miss","name","need","new","next","note","notifi","null","object","observ","observable.cr","occur","on_connect","on_error","oper","option","otherwis","out","over","param","paramet","part","pass","perform","pleas","preced","preserv","print","privat","properti","protect","provid","public","publish","publish(queuenam","queu","queue","queuedmessag","queuedmessage.head","queuedmessage.messag","queuenam","r.service.t","r.service.ts:121","r.service.ts:126","r.service.ts:161","r.service.ts:185","r.service.ts:202","r.service.ts:216","r.service.ts:226","r.service.ts:256","r.service.ts:320","r.service.ts:331","r.service.ts:342","r.service.ts:356","r.service.ts:361","r.service.ts:372","r.service.ts:40","r.service.ts:48","r.service.ts:57","r.service.ts:64","r.service.ts:69","r.service.ts:75","r.service.ts:80","r.service.ts:90","raw","re","re)connect","readm","receipt","receiptid","receiptsobserv","recent","reconnect","relat","remain","request","reset","respons","resubscrib","result","return","rpc","run","rxj","rxjs/add/operator/filt","rxjs/add/operator/first","rxjs/add/operator/shar","rxjs/behaviorsubject","rxjs/observ","rxjs/subject","rxjs/subscript","safe","same","sampl","scope","see","send","sendqueuedmessag","server","serverheadersobserv","servic","set","setconfig(valu","setup","setuponrec","setupreceipt","show","signatur","simpl","socketfn","soon","sourc","special","specif","src/stomp","state","statu","stomp","stomp.client","stomp.client(this._config.url","stomp.config","stomp.fram","stomp.j","stomp.messag","stomp.over(this._config.url","stomp/stomp.j","stomp/stompj","stompconfig","stompconnectedsubscript","stompconnectedsubscription.unsubscrib","stomphead","stomprservic","stompservic","stompstat","stompstate.connect","stompsubscript","stompsubscription.unsubscrib","stream","string","subject","subscrib","subscribe(queuenam","subscript","successfulli","sure","take","temporari","this._config","this._config.debug","this._config.head","this._config.heartbeat_in","this._config.heartbeat_out","this._config.reconnect_delay","this._serverheadersbehavioursubject","this._serverheadersbehavioursubject.next(frame.head","this.client","this.client.connect","this.client.debug","this.client.disconnect","this.client.heartbeat.incom","this.client.heartbeat.outgo","this.client.onrec","this.client.onreceipt","this.client.reconnect_delay","this.client.send(queuenam","this.client.subscribe(queuenam","this.connect","this.connectobserv","this.connectobservable.subscrib","this.debug","this.debug('connect","this.debug(`attempt","this.debug(`error","this.debug(`not","this.debug(`request","this.debug(`stomp","this.debug(`stop","this.debug(`wil","this.defaultmessagesobserv","this.defaultmessagesobservable.next(messag","this.disconnect","this.errorsubject","this.errorsubject.next(error","this.initstompcli","this.on_connect","this.on_error","this.publish(queuedmessage.queuenam","this.queuedmessag","this.queuedmessages.push({queuenam","this.receiptsobserv","this.receiptsobservable.filter((fram","this.receiptsobservable.next(fram","this.sendqueuedmessag","this.serverheadersobserv","this.setuponrec","this.setupreceipt","this.stat","this.state.getvalu","this.state.next(stompstate.clos","this.state.next(stompstate.connect","this.state.next(stompstate.disconnect","this.state.next(stompstate.tri","this.x","time","transpar","tri","trigger","twice","type","typeof","typeof(this._config.url","typic","underli","understand","unhandl","unsubscrib","up","url","us","user","valu","variabl","via","void","vs","wait","waitforreceipt","waitforreceipt(receiptid","watch","way","well","whenev","wire","wonder","work"],"injectables/StompService.html":["angular/cor","angular2","asynchron","class","config","configur","constructor","constructor(config","defin","descript","es6","exampl","export","extend","file","handl","import","info","initi","inject","librari","manual","match","messag","name","observ","option","paramet","pleas","public","queue","r.servic","readm","result","return","sampl","see","servic","sourc","specif","src/stomp.service.t","src/stomp.service.ts:20","stomp","stomp.config","stomp.j","stomp/stomp.j","stompconfig","stomprservic","stompservic","stream","subscrib","super","this.config","this.initandconnect","type","us","valu","via","want","wire"],"miscellaneous/typealiases.html":["alias","definit","header","headers.t","index","liter","match","miscellan","result","src/stomp","stomphead","type","typealias"],"miscellaneous/enumerations.html":["close","connect","disconnect","enumer","index","match","miscellan","possibl","result","servic","src/stomp","state","state.t","stomp","stompstat","tri"],"coverage.html":["100","2/2","23/23","7/7","coverag","document","file","identifi","inject","match","new","r.service.t","result","src/stomp","src/stomp.config.t","src/stomp.service.t","statement","stompconfig","stomprservic","stompservic","tabl","tablesort(document.getelementbyid('coverag","type"],"additional-documentation/sock-js.html":["0","20","20000","5","5000","addit","attempt","auto","befor","class","client","client';impl","consol","const","creat","debug","default","demo/tree/sockj","diagnost","disabl","don't","even","exampl","export","form","frequent","function","futur","guest","header","heartbeat","heartbeat_in","heartbeat_out","host","https://github.com/stomp","https://stomp","import","initi","instal","instanc","instead","interv","js","js.github.io/stomp","js/ng4","key","librari","log","login","match","millisecond","name","need","new","note","npm","object","page","paramet","pass","passcod","pleas","read","reconnect","reconnect_delay","releas","result","return","sampl","saveimport","second","see","server","set","similar","sock","socketprovid","sockj","sockjs('http://127.0.0.1:15674/stomp","src/sockjs.md.html","stompconfig","stompj","streamlin","support","though","true","typic","underli","url","us","usag","valu","wait","websocket","websocket/codo/extra/doc","work","worri"],"additional-documentation/contributing.html":["addit","check","contribut","depend","develop","docto","document","file","gener","github","instal","installor","lint","match","npm","out","page","result","run","ts","us","yarn","yarnto"],"routes.html":["match","result","rout"]},"length":14},"tokenStore":{"root":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.03065134099616858},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.02857142857142857}},".":{"3":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}},"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}},"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}},"docs":{}}},"4":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}},"docs":{}}},"6":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}},"docs":{}}},"docs":{}}},"1":{"0":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.10344827586206896}}},"docs":{}},"docs":{}},"2":{"0":{"0":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285}}},"docs":{}},"docs":{}},"1":{"7":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}},"docs":{}},"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}},"3":{"docs":{},"/":{"2":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}}},"docs":{}},"docs":{}}},"docs":{},".":{"4":{"docs":{},".":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}},"docs":{}}},"docs":{}},"/":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}}},"docs":{}}},"3":{"docs":{"overview.html":{"ref":"overview.html","tf":0.14285714285714285}}},"4":{"docs":{},".":{"0":{"docs":{},".":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}},"docs":{}}},"docs":{}}},"5":{"0":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285}}},"docs":{}},"docs":{}},"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}},".":{"0":{"docs":{},".":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}},"docs":{}}},"docs":{}}},"7":{"docs":{},"/":{"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}}},"docs":{}}},"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"b":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}},"k":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":2.5},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":3.333333333333333}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.005628517823639775},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.020202020202020204}}},"4":{"docs":{"index.html":{"ref":"index.html","tf":0.005628517823639775}}},"docs":{"index.html":{"ref":"index.html","tf":0.01125703564727955},"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.0038314176245210726},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}}}}}}}}}},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}},"p":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}}}},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}},"u":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0037174721189591076},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827}}}},"o":{"docs":{},"v":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0037174721189591076}}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05555555555555555}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0052044609665427505}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}},"a":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.01412639405204461}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.011494252873563218},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648}}}}}}}}},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.013133208255159476},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0052044609665427505}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.007434944237918215}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}},"s":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"n":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":3.3419540229885056}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.037037037037037035}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.0038314176245210726},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}},"i":{"docs":{},"m":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.005628517823639775}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.006691449814126394},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285}},"'":{"docs":{},";":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05263157894736842}}},"u":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}},"u":{"docs":{},"p":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009380863039399626},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}},"i":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}},"c":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}},"m":{"docs":{},"u":{"docs":{},"n":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.005628517823639775},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.020202020202020204}},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0150093808630394},"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0044609665427509295},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.030303030303030304}}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0150093808630394},"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827},"license.html":{"ref":"license.html","tf":0.010309278350515464},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.01532567049808429},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.03420074349442379},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05263157894736842}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"`":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.030303030303030304}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.020202020202020204}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":3.3703703703703702}},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}},"o":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"license.html":{"ref":"license.html","tf":0.041237113402061855}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030927835051546393}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}}}}},"l":{"docs":{},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.03448275862069}}}}}}}},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0052044609665427505}},"s":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.022988505747126436},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0037174721189591076},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}},"e":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}},"a":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.007434944237918215},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.022988505747126436},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.017100371747211896},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}},"i":{"docs":{},"t":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05555555555555555}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}},"m":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.009380863039399626}},"/":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005628517823639775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.037037037037037035}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145}}}}}},"a":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.0038314176245210726},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0044609665427509295},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.030303030303030304}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.037037037037037035}}}}}}}},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005628517823639775},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.03065134099616858},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.02142857142857143}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.006691449814126394},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05263157894736842}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}}}}},"o":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"license.html":{"ref":"license.html","tf":0.010309278350515464},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.037037037037037035}}}}}}},"t":{"docs":{},"o":{"docs":{"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.037037037037037035}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"t":{"docs":{},"e":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985}},"e":{"docs":{},"r":{"docs":{"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":6.719298245614034}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145}}}}},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}},"s":{"6":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}},"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0037174721189591076}}}}}}}}}},"t":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}},"r":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.01532567049808429},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.030303030303030304},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.0038314176245210726},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.005947955390334572}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.011895910780669145}},")":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}}}}}}}}}},"f":{"8":{"0":{"9":{"4":{"docs":{},"e":{"docs":{},"d":{"5":{"3":{"3":{"3":{"9":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.005628517823639775}}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"license.html":{"ref":"license.html","tf":0.010309278350515464},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.0038314176245210726},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.037037037037037035}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"r":{"docs":{},"m":{"docs":{"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"license.html":{"ref":"license.html","tf":0.010309278350515464}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.005947955390334572}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"[":{"docs":{},"'":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648}}}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.005947955390334572},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.02857142857142857}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.037037037037037035}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648}}}},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.037037037037037035}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.007434944237918215},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"changelog.html":{"ref":"changelog.html","tf":0.02586206896551724},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.02681992337164751},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.015613382899628252},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05555555555555555},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285}},"s":{"docs":{},"[":{"docs":{},"'":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}},".":{"docs":{},"t":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05555555555555555}}}}}}}},"r":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"b":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.01532567049808429},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.01532567049808429},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.01532567049808429},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}}}}}}}},"l":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145}}}}}}}},"l":{"docs":{},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.016885553470919325},"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"m":{"docs":{},"q":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{},"m":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"@":{"docs":{},"b":{"docs":{},"e":{"docs":{},"n":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005628517823639775},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.011152416356877323},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.030303030303030304},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}},"l":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.005947955390334572}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.0038314176245210726},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05555555555555555},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05263157894736842}}}},"i":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0044609665427509295}}}}},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}}}}}}}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"changelog.html":{"ref":"changelog.html","tf":0.02586206896551724},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"overview.html":{"ref":"overview.html","tf":0.14285714285714285},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":5.011494252873563},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":5.002230483271376},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":5.03030303030303},"coverage.html":{"ref":"coverage.html","tf":0.10344827586206896}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.037037037037037035}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.037037037037037035}}}}}},"n":{"docs":{},"c":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.01532567049808429},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.030927835051546393},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}},"o":{"docs":{},"m":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145}}}}},"f":{"docs":{},"o":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.0038314176245210726},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}},"j":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":2.5}},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}},"docs":{}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}},"/":{"docs":{},"n":{"docs":{},"g":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.005628517823639775},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}},"4":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}},"docs":{}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985}}}}}}}},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"license.html":{"ref":"license.html","tf":3.3436426116838485}}}}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05555555555555555}}}}},"n":{"docs":{},"t":{"docs":{"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.07407407407407407}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145}}}}}}}}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285}}},"c":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}},"o":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}},"n":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}}},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}},"f":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}},"x":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}},"n":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}}}}},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"overview.html":{"ref":"overview.html","tf":0.2857142857142857},"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827},"license.html":{"ref":"license.html","tf":0.020618556701030927},"modules.html":{"ref":"modules.html","tf":0.4},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.020202020202020204},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.1111111111111111},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.10526315789473684},"coverage.html":{"ref":"coverage.html","tf":0.06896551724137931},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.07407407407407407},"routes.html":{"ref":"routes.html","tf":0.4}}}}},"k":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}},"d":{"docs":{},"e":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.013133208255159476},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.03197026022304833},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.020202020202020204}},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.007434944237918215}}}}}},"r":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"license.html":{"ref":"license.html","tf":0.010309278350515464}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"a":{"docs":{},"n":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.022988505747126436},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285}}}}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"license.html":{"ref":"license.html","tf":0.010309278350515464}}},"s":{"docs":{},"s":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":3.3888888888888884},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":3.3859649122807016}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":10.2}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}},"s":{"docs":{},"g":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0044609665427509295},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.013133208255159476},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0037174721189591076},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}},"e":{"docs":{},"d":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145}}}}},"w":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0037174721189591076},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}},"x":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285}}},"i":{"docs":{},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}},"f":{"docs":{},"i":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.1111111111111111}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.034482758620689655}}}}}},"l":{"docs":{},"l":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.005628517823639775},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.015613382899628252},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.020202020202020204}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.01532567049808429},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}},"n":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.142857142857142}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.037037037037037035}},"g":{"docs":{},"o":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":2.5},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":3.333333333333333}}}},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285}}}}}}},"r":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}}},"a":{"docs":{},"m":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0037174721189591076}},"e":{"docs":{},"t":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0037174721189591076},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05263157894736842}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0150093808630394},"license.html":{"ref":"license.html","tf":0.010309278350515464},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.020074349442379184}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0275092936802974},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"license.html":{"ref":"license.html","tf":0.010309278350515464},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}}}}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.006691449814126394}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009380863039399626},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.008921933085501859},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.007434944237918215}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.008178438661710037}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"m":{"docs":{},"q":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.01532567049808429}}}}}}}},"w":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}},"e":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}},"m":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.020202020202020204}}}},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.008178438661710037},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.01532567049808429},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}}}}}}}}},"e":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0052044609665427505}},"i":{"docs":{},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"overview.html":{"ref":"overview.html","tf":0.2857142857142857},"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827},"license.html":{"ref":"license.html","tf":0.020618556701030927},"modules.html":{"ref":"modules.html","tf":0.4},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.020202020202020204},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.1111111111111111},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.10526315789473684},"coverage.html":{"ref":"coverage.html","tf":0.06896551724137931},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.07407407407407407},"routes.html":{"ref":"routes.html","tf":0.4}}}},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"e":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.01532567049808429},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.017100371747211896},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285}}}}},"a":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}},")":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005628517823639775},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.07407407407407407}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}},"s":{"docs":{},":":{"1":{"2":{"1":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"6":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"6":{"1":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"8":{"5":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"docs":{}},"2":{"0":{"2":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"1":{"6":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"2":{"6":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"5":{"6":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"docs":{}},"3":{"2":{"0":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"3":{"1":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"4":{"2":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"5":{"6":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"6":{"1":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"7":{"2":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"docs":{}},"4":{"0":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"8":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"5":{"7":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"6":{"4":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"9":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"7":{"5":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"8":{"0":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}},"docs":{}},"9":{"0":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}},"docs":{}},"docs":{}}}}}}}}}}}}},"p":{"docs":{},"c":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}},"x":{"docs":{},"j":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"routes.html":{"ref":"routes.html","tf":10.2}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.020637898686679174},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.020202020202020204},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}},"e":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}},"v":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}}}}},"f":{"docs":{},"e":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.01532567049808429},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285}}}}}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0225140712945591},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.020202020202020204},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0052044609665427505}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}}}}}}}}}}}},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.007434944237918215},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.04040404040404041},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05263157894736842}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.022988505747126436},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.006691449814126394},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.014285714285714285}},"u":{"docs":{},"p":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":2.5}},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.05714285714285714}},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"1":{"2":{"7":{"docs":{},".":{"0":{"docs":{},".":{"0":{"docs":{},".":{"1":{"docs":{},":":{"1":{"5":{"6":{"7":{"4":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"n":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.02857142857142857}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.0038314176245210726},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}}}},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.09278350515463918}}}}}}},"o":{"docs":{},"n":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.005628517823639775},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}},"a":{"docs":{},"l":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333}}}},"t":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0044609665427509295}}},"e":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.011152416356877323},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05263157894736842}},".":{"docs":{},"t":{"docs":{"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05263157894736842}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.016885553470919325},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.011494252873563218},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0275092936802974},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.04040404040404041},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05263157894736842}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648}}}}}},"j":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"n":{"docs":{},"g":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.005628517823639775}}},"docs":{}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.005628517823639775},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}},"s":{"docs":{},"'":{"docs":{},";":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}}}}}}}},".":{"docs":{},"j":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.020202020202020204}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0150093808630394},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":5.007662835249042},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.04040404040404041},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.02857142857142857}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.01532567049808429},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.006691449814126394},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.16666666666666666}}}}}},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.016885553470919325},"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}},"#":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"#":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":5.001486988847583},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.030303030303030304},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0150093808630394},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":5.02020202020202},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.10526315789473684}},"e":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0037174721189591076}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0150093808630394},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.02681992337164751},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.01412639405204461}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}}},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}},"u":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.009380863039399626},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.009665427509293681},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.005947955390334572}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.012639405204460967}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.02586206896551724},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}}}},"r":{"docs":{},"e":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}}},"o":{"docs":{},"w":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}},"p":{"docs":{},"l":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.017843866171003718},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05555555555555555},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05263157894736842},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.0038314176245210726},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}},"s":{"docs":{},":":{"2":{"4":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.0038314176245210726}}},"docs":{}},"3":{"1":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.0038314176245210726}}},"8":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.0038314176245210726}}},"docs":{}},"4":{"6":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.0038314176245210726}}},"docs":{}},"5":{"4":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.0038314176245210726}}},"7":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.0038314176245210726}}},"docs":{}},"docs":{}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}},"s":{"docs":{},":":{"2":{"0":{"docs":{"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"j":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"'":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"b":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648}}},"r":{"docs":{},"t":{"docs":{},"b":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.002973977695167286}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"b":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"e":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}}}}}}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648}}}}}}}}}},"`":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}},"p":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"{":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985}}}},"m":{"docs":{},"e":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05263157894736842}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.011895910780669145}}}}}}},"u":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.01125703564727955},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.038314176245210725},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.03571428571428571}}}},"e":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.022988505747126436},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.011895910780669145},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.16666666666666666},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}},"o":{"docs":{},"f":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":6.666666666666666}}}}}}}}}},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.037037037037037035}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}},"b":{"docs":{},"l":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0037174721189591076},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}},"p":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827}}}}}},"r":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.022988505747126436},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.02857142857142857}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0150093808630394},"changelog.html":{"ref":"changelog.html","tf":0.017241379310344827},"license.html":{"ref":"license.html","tf":0.020618556701030927},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.011152416356877323},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.04040404040404041},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.037037037037037035}},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0022304832713754648}},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.0150093808630394},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.022988505747126436},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.008921933085501859},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.020202020202020204},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.02142857142857143}}}},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414}}}}}}}},"i":{"docs":{},"a":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.015613382899628252}}}}},"s":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"changelog.html":{"ref":"changelog.html","tf":0.008620689655172414},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}}}}}},"n":{"docs":{},"t":{"docs":{"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}}}},"e":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0075046904315197},"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0044609665427509295},"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}},"r":{"docs":{},"i":{"docs":{"additional-documentation/sock-js.html":{"ref":"additional-documentation/sock-js.html","tf":0.007142857142857143}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215}}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"1":{"2":{"7":{"docs":{},".":{"0":{"docs":{},".":{"0":{"docs":{},".":{"1":{"docs":{},":":{"1":{"5":{"6":{"7":{"4":{"docs":{},"/":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925},"injectables/StompConfig.html":{"ref":"injectables/StompConfig.html","tf":0.007662835249042145}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"n":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.001486988847583643}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030927835051546393}}}}}}},"r":{"docs":{},"e":{"docs":{"injectables/StompRService.html":{"ref":"injectables/StompRService.html","tf":0.0007434944237918215},"injectables/StompService.html":{"ref":"injectables/StompService.html","tf":0.010101010101010102}}}}}},"y":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.00375234521575985},"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.037037037037037035}},"t":{"docs":{},"o":{"docs":{"additional-documentation/contributing.html":{"ref":"additional-documentation/contributing.html","tf":0.037037037037037035}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001876172607879925}}}}}}}}}}}},"length":1142},"corpusTokens":["0","0.3.0","0.3.4","0.3.5","0.3.8","0.4.0","0.4.2","0.4.3","0.6.0","0.6.1","0.6.2","100","2.4.0","2/2","20","20000","2017","23/23","3","4.0.0","5","5.0.0","5000","7/7","_config","_serverheadersbehavioursubject","_stompservic","abil","abov","accessor","ack","acknowledg","action","activ","actual","ad","add","addit","addition","alias","alreadi","altern","alway","and/or","angular","angular/cor","angular2","angular4","api","app_initi","appli","appreci","arg","aris","array","articl","assign","associ","assum","astha","async","asynchron","attempt","author","auto","background","base","beat","beautifulli","befor","behaviorsubject","behaviorsubject(nul","behaviorsubject(stompstate.clos","behavioursubject","benefit","boolean","broker","bundl","c","call","callback","caller","carri","case","chang","changelog","charalampidi","charg","check","claim","class","clean","cleanup","cli","client","client';impl","close","closur","code","cofig","cold","coldobserv","coldobservable.shar","come","commun","compat","compil","compliant","complic","compon","condit","config","config(valu","configur","connect","connectobserv","consol","console.log(`receiv","console.log(`stomp","console.log(new","const","constructor","constructor(config","constructor(priv","consum","contract","contribut","contributor","control","convert","copi","copyright","correctli","correspond","coverag","creat","curiou","current","currentst","damag","date","deal","debug","deep","deepak","default","defaultmessagesobserv","defin","definit","delay","demo","demo/blob/master/src/app/app.module.t","demo/tree/sockj","demonstr","depend","descript","design","destin","detail","develop","diagnost","dimitri","directli","disabl","disconnect","distribut","do","docto","document","don't","drop","dure","emit","enabl","end","enum","enumer","error","error).bodi","errorsubject","es6","establish","etc","even","event","everyon","exampl","explanatori","explicitli","export","express","extend","f8094ed53339","feel","fetch","few","field","file","filter","filter((currentst","filter((head","finnigan","first().subscribe((fram","fit","follow","form","frame","frame.headers['receipt","free","frequent","function","furnish","further","futur","gener","get","github","good","grant","guest","handl","happen","hard","hash","header","headers.t","headers['ack","heart","heartbeat","heartbeat_in","heartbeat_out","help","herebi","hold","holder","host","host:str","hot","http","https://angular.io/docs/ts/latest/guide/depend","https://github.com/stomp","https://medium.com/@benlesh/hot","https://stomp","https://www.rabbitmq.com/stomp.html","https://www.rabbitmq.com/web","id","identifi","ignor","immedi","implement","impli","import","improv","includ","incom","inde","index","indic","info","initandconnect","initi","initstomp","initstompcli","inject","injection.html","insid","instal","installor","instanc","instead","interest","intern","interv","involv","ionic","issu","jimi","js","js.github.io/ng2","js.github.io/stomp","js/ng2","js/ng4","js/stomp","json","json.stringifi","jump","karma","key","kind","know","kumar","leav","left","lexic","liabil","liabl","librari","licens","limit","lint","liter","local","localhost","log","logic","login","long","longer","look","made","magic","main","maintain","make","manual","map","map((stat","match","mean","merchant","merg","messag","message');pleas","message.bodi","messages.next(messag","method","millisecond","miscellan","miss","mit","modifi","modul","more","msg_bodi","name","need","neeed","new","next","noninfring","note","notic","notifi","now","npm","null","number","object","observ","observable.cr","obtain","occur","on_connect","on_error","onc","oper","option","otherwis","out","outgo","over","overview","page","param","paramet","part","particular","pass","passcod","per","perform","permiss","permit","person","pipe","pleas","plugin","portion","possibl","potenti","preced","prerequisit","preserv","print","privat","process","project","properti","protect","provid","public","publish","publish(queuenam","purpos","queu","queue","queuedmessag","queuedmessage.head","queuedmessage.messag","queuenam","r.servic","r.service.t","r.service.ts:121","r.service.ts:126","r.service.ts:161","r.service.ts:185","r.service.ts:202","r.service.ts:216","r.service.ts:226","r.service.ts:256","r.service.ts:320","r.service.ts:331","r.service.ts:342","r.service.ts:356","r.service.ts:361","r.service.ts:372","r.service.ts:40","r.service.ts:48","r.service.ts:57","r.service.ts:64","r.service.ts:69","r.service.ts:75","r.service.ts:80","r.service.ts:90","rabbitmq","raw","re","re)connect","read","readi","readm","reap","receipt","receiptid","receiptsobserv","recent","reconnect","reconnect_delay","refer","relat","releas","remain","report","repositori","repres","request","reset","resourc","respons","restrict","resubscrib","result","return","right","rout","rpc","run","rxj","rxjs/add/operator/filt","rxjs/add/operator/first","rxjs/add/operator/shar","rxjs/behaviorsubject","rxjs/observ","rxjs/subject","rxjs/subscript","safe","sam","same","sampl","saveimport","saveor","scope","second","see","sell","semant","send","sendqueuedmessag","server","serverheadersobserv","servic","set","setconfig(valu","setup","setuponrec","setupreceipt","sever","shall","show","signatur","similar","simpl","sock","socketfn","socketprovid","sockj","sockjs('http://127.0.0.1:15674/stomp","softwar","soon","sourc","special","specif","specifi","src/sockjs.md.html","src/stomp","src/stomp.config.t","src/stomp.config.ts:24","src/stomp.config.ts:31","src/stomp.config.ts:38","src/stomp.config.ts:46","src/stomp.config.ts:54","src/stomp.config.ts:57","src/stomp.service.t","src/stomp.service.ts:20","start","state","state.t","statement","statu","stomp","stomp.client","stomp.client(this._config.url","stomp.config","stomp.fram","stomp.html","stomp.j","stomp.messag","stomp.over(this._config.url","stomp/ng2","stomp/stomp.j","stomp/stompj","stomp/stompjs';unsubscrib","stomp_subscript","stomp_subscription.map((messag","stompconfig","stompconfigservic","stompconnectedsubscript","stompconnectedsubscription.unsubscrib","stomphead","stompj","stompjs/classes/stomprservice.html#serverheadersobserv","stompjs/classes/stompservice.html","stompjs/classes/stompservice.html#publish","stompjs/classes/stompservice.html#subscrib","stompjs/index.html","stompjsthi","stomprservic","stompservic","stompservice.st","stompstat","stompstate.connect","stompstate[st","stompsubscript","stompsubscription.unsubscrib","stream","streamlin","string","structur","style","sub","subject","sublicens","subscrib","subscribe((msg_bodi","subscribe((statu","subscribe(queuenam","subscript","substanti","success","successfulli","super","support","sure","switch","tabl","tablesort(document.getelementbyid('coverag","take","techniqu","templat","temporari","test","testb","this._config","this._config.debug","this._config.head","this._config.heartbeat_in","this._config.heartbeat_out","this._config.reconnect_delay","this._serverheadersbehavioursubject","this._serverheadersbehavioursubject.next(frame.head","this._stompservice.config","this._stompservice.connectobserv","this._stompservice.initandconnect","this._stompservice.publish('/topic/ng","this._stompservice.st","this._stompservice.subscribe('/topic/ng","this.client","this.client.connect","this.client.debug","this.client.disconnect","this.client.heartbeat.incom","this.client.heartbeat.outgo","this.client.onrec","this.client.onreceipt","this.client.reconnect_delay","this.client.send(queuenam","this.client.subscribe(queuenam","this.config","this.connect","this.connectobserv","this.connectobservable.subscrib","this.debug","this.debug('connect","this.debug(`attempt","this.debug(`error","this.debug(`not","this.debug(`request","this.debug(`stomp","this.debug(`stop","this.debug(`wil","this.defaultmessagesobserv","this.defaultmessagesobservable.next(messag","this.disconnect","this.errorsubject","this.errorsubject.next(error","this.fetchconfigfromsomewher","this.initandconnect","this.initstompcli","this.on_connect","this.on_error","this.publish(queuedmessage.queuenam","this.queuedmessag","this.queuedmessages.push({queuenam","this.receiptsobserv","this.receiptsobservable.filter((fram","this.receiptsobservable.next(fram","this.sendqueuedmessag","this.serverheadersobserv","this.setuponrec","this.setupreceipt","this.stat","this.state.getvalu","this.state.next(stompstate.clos","this.state.next(stompstate.connect","this.state.next(stompstate.disconnect","this.state.next(stompstate.tri","this.x","though","till","time","tort","transpar","travi","tri","trigger","true","ts","twice","type","typealias","typedoc","typeof","typeof(this._config.url","typic","unabl","underli","understand","unhandl","unsubscrib","up","updat","url","us","usag","user","user/password","usevalu","usual","valu","vari","variabl","version","via","viaclass","virtual","void","vs","wait","waitforreceipt","waitforreceipt(receiptid","want","warranti","watch","way","web","websocket","websocket/codo/extra/doc","well","whenev","whether","wire","without","wonder","work","worri","wrapper","ws://127.0.0.1:15674/w","yarn","yarnto","yourclass"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@stomp/ng2-stompjs\n\nAn Angular (Angular2, Angular4, ...) style wrapper for @stomp/stompjs.\nCompatibility\nTested with Angular CLI generated Angular2 (2.4.0), Angular4 (4.0.0), \nAngular (5.0.0). \nIt has been reported to work with ionic projects as well.\nInstallation\nTo install this library, run:\n$ npm install @stomp/ng2-stompjs --saveor, if using yarn:\n$ yarn add @stomp/ng2-stompjsThis will additionally install @stomp/stompjs \nfrom https://github.com/stomp-js/stomp-websocket\nUsage\n\nSee API documentation at \nhttps://stomp-js.github.io/ng2-stompjs/classes/stompservice.html\nand https://stomp-js.github.io/ng2-stompjs/index.html\nSee https://github.com/stomp-js/ng4-stompjs-demo for a working sample\nusing Angular4 and Angular CLI\nSee https://github.com/stomp-js/ng2-stompjs-demo for a working sample\nusing Angular2 and Angular CLI. This version also demonstrates fetching\nStomp configuration using a http call (APP_INITIALIZER)\nSee SockJS Support.\nhttps://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs for a sample\nusing SockJS\n\nPrerequisites\n\nYou will need to have a Stomp broker running.\nThe sample code on this page assumes you have\nRabbitMQ running with default settings and Web STOMP plugin activated.\n(see: https://www.rabbitmq.com/web-stomp.html.)\n\nAll the Hard Work\n\nThe main service is StompService, which will need to be provided\nThe STOMP Broker connection details will need to be provided viaclass StompConfig. See the samples for several ways to configure it\nSee https://angular.io/docs/ts/latest/guide/dependency-injection.html for\nbackground reading\nSample configuration:\n\n    const stompConfig: StompConfig = {\n      // Which server?\n      url: 'ws://127.0.0.1:15674/ws',\n\n      // Headers\n      // Typical keys: login, passcode, host\n      headers: {\n        login: 'guest',\n        passcode: 'guest'\n      },\n\n      // How often to heartbeat?\n      // Interval in milliseconds, set to 0 to disable\n      heartbeat_in: 0, // Typical value 0 - disabled\n      heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n      // Wait in milliseconds before attempting auto reconnect\n      // Set to 0 to disable\n      // Typical value 5000 (5 seconds)\n      reconnect_delay: 5000,\n\n      // Will log diagnostics on console\n      debug: true\n    };\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts \nfor a sample code file with configuration passed from a local\nhash. Feel free to copy and modify this file\nSee https://github.com/stomp-js/ng2-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample code file with configuration fetched from a http\nresource\nAssuming the config specified as a const, code sample to \nprovide StompService and StompConfig will look like:\n\n  providers: [\n    StompService,\n    {\n      provide: StompConfig,\n      useValue: stompConfig\n    }\n  ]\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample file\n\nReap the Benefits\nInject StompService\nIn your constructor (typically of a component or a service), inject\n  StompService as a dependency:\nconstructor(private _stompService: StompService) { }Subscribe to a queue\nThe queue name structure and semantics vary\nbased on your specific STOMP Broker, \nsee: https://www.rabbitmq.com/stomp.html\nfor RabbitMQ specific details.\nCall subscribe(queueName: string, headers: StompHeaders = {}) \nwith name of the queue which returns an Observable (details at:\nhttps://stomp-js.github.io/ng2-stompjs/classes/stompservice.html#subscribe). Any\nof Observable specific operators (map, filter, subscribe, etc.) can be\napplied on it. This can also be set into a template with async pipe.\nExample:\n    let stomp_subscription = this._stompService.subscribe('/topic/ng-demo-sub');\n\n    stomp_subscription.map((message: Message) => {\n      return message.body;\n    }).subscribe((msg_body: string) => {\n      console.log(`Received: ${msg_body}`);\n    });The Message class comes from @stomp/stompjs. So, you will need the\nfollowing import in the classes where you consume messages:\nimport {Message} from '@stomp/stompjs';Unsubscribe from a queue\nYou will need to unsubscribe from stomp_subscription (which is an Observer),\nit will then internally unsubscribe from the underlying STOMP queue\nsubscription.\nPublishing messages\nCall publish(queueName: string, message: string, headers: StompHeaders = {}) \n(details at: https://stomp-js.github.io/ng2-stompjs/classes/stompservice.html#publish).\nExample:\nthis._stompService.publish('/topic/ng-demo-sub', 'My important message');Please note that message is actually string. So, if you need to send JSON\nyou will need to convert it into string (typically using \nJSON.stringify())\nWatching for Stomp connection status\n\nstompService.state is a BehaviorSubject which maintains and switches\nits value as per the underlying Stomp Connection status.\nThe value is from an enum with these possible values: \nCLOSED\nTRYING\nCONNECTED\nDISCONNECTING\n\n\nThe following code will subscribe to stompService.state and convert\nthe enum value (which is a number) to the corresponding string value:\n\n    this._stompService.state\n      .map((state: number) => StompState[state])\n      .subscribe((status: string) => {\n      console.log(`Stomp connection status: ${status}`);\n    });If you are interested in watching only when connection is established, you can\nsubscribe to this._stompService.connectObservable.\nDelayed initialization\nIt is usually possible to use Angular dependency injection techniques and\nAPP_INITIALIZER to delay the initialization till the configuration is ready\n(may be fetched using an API call.) See a sample at:\nhttps://github.com/stomp-js/ng2-stompjs-demo\nThe initialization process can be manually controlled with the additional \nclass StompRService which is injected \ninstead of StompService. This has a few additional\nmethods to assign a configuration and manually initiate the connection to the STOMP Broker.\n// Do not provide StompService or StompConfig, only provide StompRService\n\n  providers: [\n    StompRService\n  ]class YourClass {}\n    constructor(private _stompService: StompRService) { }\n\n    public initStomp() {\n      StompConfig config;\n\n      cofig = this.fetchConfigFromSomeWhere();\n\n      this._stompService.config = config;\n      this._stompService.initAndConnect();\n    }\n}The methods subscribe and publish can be called even before call to initAndConnect.\nHowever these will be queued till the actual connection is successful.\nFor the curious - initAndConnect may be called more than once with a potentially\nupdated configuration.\nContributors\n\nSam Finnigan\nJimi (Dimitris) Charalampidis\nDeepak Kumar\nAstha Deep\nEveryone involved at https://github.com/stomp-js/stomp-websocket\n\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n\n    \n            \n                \n                    \n                        \n                        3 injectables\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n0.6.2\n\nAdded ability to get server headers from CONNECTED Frame \nhttps://stomp-js.github.io/ng2-stompjs/classes/stomprservice.html#serverheadersobservable\nEnabled Travis\n\n0.6.1\n\nUpdated dependencies\n\n0.6.0\n\nJump in version number to indicate compiled JS release\nImproved Angular 5 support\n\n0.4.3\n\nAbility to delay initialization\nAngular 5 compatibility\n\n0.4.2\n\nInitial SockJS Support.\nSample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\n\n0.4.0\n\nUpdated to make it compliant to possible use of APP_INITIALIZER. The way to initiate the service has changed and it no longer uses StompConfigService.\nStompConfig is directly injected as dependency into StompService\n\n0.3.8\n\nSwitched to source distribution. The npm bundle now only has .ts files\n\n0.3.5\n\nTest case at https://github.com/stomp-js/ng2-stompjs-testbed these\nwill be merged into main repository in future. Currently unable\nto configure Karma correctly in the main project. Any help appreciated\n\n0.3.4\n\nAdded references to GitHub pages\n\n0.3.0\n\nConfiguration structure has changed, user/password are not part of header\nSupport for headers in connect, subscribe, and publish\nTypedoc for API documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Deepak Kumar\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompConfig.html":{"url":"injectables/StompConfig.html","title":"injectable - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for the\nSTOMPService to connect to.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        debug\n                                    \n                                    \n                                        headers\n                                    \n                                    \n                                        heartbeat_in\n                                    \n                                    \n                                        heartbeat_out\n                                    \n                                    \n                                        reconnect_delay\n                                    \n                                    \n                                        url\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        debug\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    debug:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp.config.ts:57\n                                        \n                                    \n            \n                            \n                                \n                                    Enable client debugging? \n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        headers\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    headers:     StompHeaders\n            \n                                \n                            \n                                \n                                    \n                                        Type :     StompHeaders\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp.config.ts:31\n                                        \n                                    \n            \n                            \n                                \n                                    Headers\n            Typical keys: login: string, passcode: string.\n            host:string will neeed to be passed for virtual hosts in RabbitMQ\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        heartbeat_in\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    heartbeat_in:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp.config.ts:38\n                                        \n                                    \n            \n                            \n                                \n                                    How often to incoming heartbeat?\n            Interval in milliseconds, set to 0 to disable\n            Typical value 0 - disabled\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        heartbeat_out\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    heartbeat_out:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp.config.ts:46\n                                        \n                                    \n            \n                            \n                                \n                                    How often to outgoing heartbeat?\n            Interval in milliseconds, set to 0 to disable\n            Typical value 20000 - every 20 seconds\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        reconnect_delay\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    reconnect_delay:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp.config.ts:54\n                                        \n                                    \n            \n                            \n                                \n                                    Wait in milliseconds before attempting auto reconnect\n            Set to 0 to disable\n            Typical value 5000 (5 seconds)\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        url\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    url:     string | \n            \n                                \n                            \n                                \n                                    \n                                        Type :     string | \n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp.config.ts:24\n                                        \n                                    \n            \n                            \n                                \n                                    Server URL to connect to. Please refer to your STOMP broker documentation for details.\n            Example: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\n            Alternatively this parameter can be a function that returns an object similar to WebSocket\n            (typically SockJS instance).\n            Example:\n            () => {\n               return new SockJS('http://127.0.0.1:15674/stomp');\n            }\n            \n                                \n                            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\nimport { Injectable } from '@angular/core';\n/**\n * Represents a configuration object for the\n * STOMPService to connect to.\n */\n\n@Injectable()\nexport class StompConfig {\n  /**\n   * Server URL to connect to. Please refer to your STOMP broker documentation for details.\n   *\n   * Example: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\n   *\n   * Alternatively this parameter can be a function that returns an object similar to WebSocket\n   * (typically SockJS instance).\n   *\n   * Example:\n   *\n   * () => {\n   *   return new SockJS('http://127.0.0.1:15674/stomp');\n   * }\n   */\n  url: string | (() => any);\n\n  /**\n   * Headers\n   * Typical keys: login: string, passcode: string.\n   * host:string will neeed to be passed for virtual hosts in RabbitMQ\n   */\n  headers: StompHeaders;\n\n  /** How often to incoming heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 0 - disabled\n   */\n  heartbeat_in: number;\n\n  /**\n   * How often to outgoing heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 20000 - every 20 seconds\n   */\n  heartbeat_out: number;\n\n  /**\n   * Wait in milliseconds before attempting auto reconnect\n   * Set to 0 to disable\n   *\n   * Typical value 5000 (5 seconds)\n   */\n  reconnect_delay: number;\n\n  /** Enable client debugging? */\n  debug: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRService.html":{"url":"injectables/StompRService.html","title":"injectable - StompRService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompRService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp-r.service.ts\n        \n\n            \n                Description\n            \n            \n                Angular2 STOMP Raw Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Protected\n                                        client\n                                    \n                                    \n                                            Public\n                                        connectObservable\n                                    \n                                    \n                                            Protected\n                                        debug\n                                    \n                                    \n                                            Public\n                                        defaultMessagesObservable\n                                    \n                                    \n                                            Public\n                                        errorSubject\n                                    \n                                    \n                                            Protected\n                                        on_connect\n                                    \n                                    \n                                            Protected\n                                        on_error\n                                    \n                                    \n                                            Protected\n                                        queuedMessages\n                                    \n                                    \n                                            Public\n                                        receiptsObservable\n                                    \n                                    \n                                            Public\n                                        serverHeadersObservable\n                                    \n                                    \n                                            Public\n                                        state\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        connected\n                                    \n                                    \n                                            Public\n                                        disconnect\n                                    \n                                    \n                                            Public\n                                        initAndConnect\n                                    \n                                    \n                                            Protected\n                                        initStompClient\n                                    \n                                    \n                                            Public\n                                        publish\n                                    \n                                    \n                                            Protected\n                                        sendQueuedMessages\n                                    \n                                    \n                                            Protected\n                                        setupOnReceive\n                                    \n                                    \n                                            Protected\n                                        setupReceipts\n                                    \n                                    \n                                            Public\n                                        subscribe\n                                    \n                                    \n                                            Public\n                                        waitForReceipt\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        config\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:90\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        connected\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    connected()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:202\n                                        \n                                    \n            \n                            \n                                \n                                        The current connection status with the STOMP broker\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        disconnect\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    disconnect()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:185\n                                        \n                                    \n            \n                            \n                                \n                                        Disconnect the connection to the STOMP broker and clean up,\n            not sure how this method will get called, if ever.\n            Call this method only if you know what you are doing.\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        initAndConnect\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    initAndConnect()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:161\n                                        \n                                    \n            \n                            \n                                \n                                        Perform connection to STOMP broker\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        initStompClient\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    initStompClient()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:126\n                                        \n                                    \n            \n                            \n                                \n                                        Initialize STOMP Client \n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        publish\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    publish(queueName: string, message: string, headers: StompHeaders)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:216\n                                        \n                                    \n            \n                            \n                                \n                                        Send a message to a named destination. The message must be string.\n            The message will get locally queued if the STOMP broker is not connected. Attempt\n            will be made to publish queued messages as soon as the broker gets connected.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              queueName\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              message\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              headers\n                                                              \n                                                                      StompHeaders\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        sendQueuedMessages\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    sendQueuedMessages()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:226\n                                        \n                                    \n            \n                            \n                                \n                                        Send queued messages \n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        setupOnReceive\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    setupOnReceive()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:320\n                                        \n                                    \n            \n                            \n                                \n                                        Handle messages to default queue, it will include any unhandled messages. We can use this for\n            RPC type communications.\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        setupReceipts\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    setupReceipts()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:331\n                                        \n                                    \n            \n                            \n                                \n                                        Emit all receipts.\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        subscribe\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    subscribe(queueName: string, headers: StompHeaders)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:256\n                                        \n                                    \n            \n                            \n                                \n                                        Subscribe to server message queues\n            This method can safely be called even when STOMP broker is not connected. Further\n            if the underlying STOMP connection drops and reconnects, it will resubscribe transparently.\n            If a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\n            do not understand what it means, please leave it as is.\n            Please note, however, while working with temporary queues, where the subscription request\n            creates the\n            underlying queue, during reconnect it might miss messages. This issue is not specific\n            to this library but the way STOMP brokers are designed to work.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              queueName\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              headers\n                                                              \n                                                                      StompHeaders\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        waitForReceipt\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    waitForReceipt(receiptId: string, callback: () => void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:342\n                                        \n                                    \n            \n                            \n                                \n                                        Wait for receipt, this indicates that server has carried out the related operation\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              receiptId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              callback\n                                                              \n                                                                      function\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        client\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    client:     Stomp.Client\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Stomp.Client\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:90\n                                        \n                                    \n            \n                            \n                                \n                                    STOMP Client from @stomp/stomp.js\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        connectObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    connectObservable:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:48\n                                        \n                                    \n            \n                            \n                                \n                                    Will trigger when connection is established. Use this to carry out initialization.\n            It will trigger every time a (re)connection occurs. If it is already connected\n            it will trigger immediately. You can safely ignore the value, as it will always be\n            StompState.CONNECTED\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        debug\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    debug:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : (args: any): void => {\n                  console.log(new Date(), args);\n              }\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:356\n                                        \n                                    \n            \n                            \n                                \n                                    Callback Functions\n            Note the method signature: () => preserves lexical scope\n            if we need to use this.x inside the function\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        defaultMessagesObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    defaultMessagesObservable:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:64\n                                        \n                                    \n            \n                            \n                                \n                                    Will emit all messages to the default queue (any message that are not handled by a subscription)\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        errorSubject\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    errorSubject:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:75\n                                        \n                                    \n            \n                            \n                                \n                                    Will trigger when an error occurs. This Subject can be used to handle errors from\n            the stomp broker.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        on_connect\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    on_connect:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : (frame: Frame) => {\n            \n                this.debug('Connected');\n            \n                this._serverHeadersBehaviourSubject.next(frame.headers);\n            \n                // Indicate our connected state to observers\n                this.state.next(StompState.CONNECTED);\n              }\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:361\n                                        \n                                    \n            \n                            \n                                \n                                    Callback run on successfully connecting to server \n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        on_error\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    on_error:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : (error: string | Stomp.Message) => {\n            \n                // Trigger the error subject\n                this.errorSubject.next(error);\n            \n                if (typeof error === 'object') {\n                  error = (error).body;\n                }\n            \n                this.debug(`Error: ${error}`);\n            \n                // Check for dropped connection and try reconnecting\n                if (!this.client.connected) {\n                  // Reset state indicator\n                  this.state.next(StompState.CLOSED);\n                }\n              }\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:372\n                                        \n                                    \n            \n                            \n                                \n                                    Handle errors from stomp.js \n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        queuedMessages\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    queuedMessages:     literal type[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     literal type[]\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : []\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:80\n                                        \n                                    \n            \n                            \n                                \n                                    Internal array to hold locally queued messages when STOMP broker is not connected.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        receiptsObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    receiptsObservable:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:69\n                                        \n                                    \n            \n                            \n                                \n                                    Will emit all receipts\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        serverHeadersObservable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    serverHeadersObservable:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:57\n                                        \n                                    \n            \n                            \n                                \n                                    Provides headers from most recent connection to the server as return by the CONNECTED\n            frame.\n            If the STOMP connection has already been established it will trigger immediately.\n            It will additionally trigger in event of reconnection, the value will be set of headers from\n            the recent server response.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        state\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    state:     BehaviorSubject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     BehaviorSubject\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/stomp-r.service.ts:40\n                                        \n                                    \n            \n                            \n                                \n                                    State of the STOMPService\n            It is a BehaviorSubject and will emit current status immediately. This will typically get\n            used to show current status to the end user.\n            \n                                \n                            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    config\n                                \n                            \n            \n            \n                            \n                                \n                                    setconfig(value: )\n                                \n                            \n                                        \n                                            \n                                                Defined in src/stomp-r.service.ts:121\n                                            \n                                        \n                                \n                                    \n                                            Set configuration \n            \n            \n                                            \n                                                    Parameters :\n                                                    \n                                                        \n                                                            \n                                                                Name\n                                                                Type\n                                                                Optional\n                                                                Description\n                                                            \n                                                        \n                                                        \n                                                                \n                                                                  value\n                                                                  \n                                                                  \n                                                                  \n                                                                  \n                                                                  \n                                                                \n                                                        \n                                                    \n                                            \n                                            \n                                            \n                                            \n                                                Returns :     void\n            \n                                            \n                                    \n                                \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/first';\nimport 'rxjs/add/operator/share';\n\nimport { StompConfig } from './stomp.config';\n\nimport * as Stomp from '@stomp/stompjs';\nimport { Frame, StompSubscription } from '@stomp/stompjs';\nimport { StompHeaders } from './stomp-headers';\nimport { StompState } from './stomp-state';\n\n/**\n * Angular2 STOMP Raw Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you will like to pass the configuration as a dependency,\n * please use StompService class.\n */\n@Injectable()\nexport class StompRService {\n  /**\n   * State of the STOMPService\n   *\n   * It is a BehaviorSubject and will emit current status immediately. This will typically get\n   * used to show current status to the end user.\n   */\n  public state: BehaviorSubject;\n\n  /**\n   * Will trigger when connection is established. Use this to carry out initialization.\n   * It will trigger every time a (re)connection occurs. If it is already connected\n   * it will trigger immediately. You can safely ignore the value, as it will always be\n   * StompState.CONNECTED\n   */\n  public connectObservable: Observable;\n\n  /**\n   * Provides headers from most recent connection to the server as return by the CONNECTED\n   * frame.\n   * If the STOMP connection has already been established it will trigger immediately.\n   * It will additionally trigger in event of reconnection, the value will be set of headers from\n   * the recent server response.\n   */\n  public serverHeadersObservable: Observable;\n\n  private _serverHeadersBehaviourSubject: BehaviorSubject;\n\n  /**\n   * Will emit all messages to the default queue (any message that are not handled by a subscription)\n   */\n  public defaultMessagesObservable: Subject;\n\n  /**\n   * Will emit all receipts\n   */\n  public receiptsObservable: Subject;\n\n  /**\n   * Will trigger when an error occurs. This Subject can be used to handle errors from\n   * the stomp broker.\n   */\n  public errorSubject: Subject;\n\n  /**\n   * Internal array to hold locally queued messages when STOMP broker is not connected.\n   */\n  protected queuedMessages: {queueName: string, message: string, headers: StompHeaders}[]= [];\n\n  /**\n   * Configuration\n   */\n  private _config: StompConfig;\n\n  /**\n   * STOMP Client from @stomp/stomp.js\n   */\n  protected client: Stomp.Client;\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor() {\n    this.state = new BehaviorSubject(StompState.CLOSED);\n\n    this.connectObservable = this.state\n      .filter((currentState: StompState) => {\n        return currentState === StompState.CONNECTED;\n      });\n\n    // Setup sending queuedMessages\n    this.connectObservable.subscribe(() => {\n      this.sendQueuedMessages();\n    });\n\n    this._serverHeadersBehaviourSubject = new BehaviorSubject(null);\n\n    this.serverHeadersObservable = this._serverHeadersBehaviourSubject\n      .filter((headers: null | StompHeaders) => {\n        return headers !== null;\n      });\n\n    this.errorSubject = new Subject();\n  }\n\n  /** Set configuration */\n  set config(value: StompConfig) {\n    this._config = value;\n  }\n\n  /** Initialize STOMP Client */\n  protected initStompClient(): void {\n    // disconnect if connected\n    this.disconnect();\n\n    // url takes precedence over socketFn\n    if (typeof(this._config.url) === 'string') {\n      this.client = Stomp.client(this._config.url);\n    } else {\n      this.client = Stomp.over(this._config.url);\n    }\n\n    // Configure client heart-beating\n    this.client.heartbeat.incoming = this._config.heartbeat_in;\n    this.client.heartbeat.outgoing = this._config.heartbeat_out;\n\n    // Auto reconnect\n    this.client.reconnect_delay = this._config.reconnect_delay;\n\n    if (!this._config.debug) {\n      this.debug = function() {};\n    }\n    // Set function to debug print messages\n    this.client.debug = this.debug;\n\n    // Default messages\n    this.setupOnReceive();\n\n    // Receipts\n    this.setupReceipts();\n  }\n\n\n  /**\n   * Perform connection to STOMP broker\n   */\n  public initAndConnect(): void {\n    this.initStompClient();\n\n    if (!this._config.headers) {\n      this._config.headers = {};\n    }\n\n    // Attempt connection, passing in a callback\n    this.client.connect(\n      this._config.headers,\n      this.on_connect,\n      this.on_error\n    );\n\n    this.debug('Connecting...');\n    this.state.next(StompState.TRYING);\n  }\n\n\n  /**\n   * Disconnect the connection to the STOMP broker and clean up,\n   * not sure how this method will get called, if ever.\n   * Call this method only if you know what you are doing.\n   */\n  public disconnect(): void {\n\n    // Disconnect if connected. Callback will set CLOSED state\n    if (this.client && this.client.connected) {\n      // Notify observers that we are disconnecting!\n      this.state.next(StompState.DISCONNECTING);\n\n      this.client.disconnect(\n        () => this.state.next(StompState.CLOSED)\n      );\n    }\n  }\n\n  /**\n   * The current connection status with the STOMP broker\n   * @returns {boolean}\n   */\n  public connected(): boolean {\n    return this.state.getValue() === StompState.CONNECTED;\n  }\n\n  /**\n   * Send a message to a named destination. The message must be string.\n   *\n   * The message will get locally queued if the STOMP broker is not connected. Attempt\n   * will be made to publish queued messages as soon as the broker gets connected.\n   *\n   * @param queueName\n   * @param message\n   * @param headers\n   */\n  public publish(queueName: string, message: string, headers: StompHeaders = {}): void {\n    if (this.connected()) {\n      this.client.send(queueName, headers, message);\n    } else {\n      this.debug(`Not connected, queueing ${message}`);\n      this.queuedMessages.push({queueName: queueName, message: message, headers: headers});\n    }\n  }\n\n  /** Send queued messages */\n  protected sendQueuedMessages(): void {\n    const queuedMessages = this.queuedMessages;\n    this.queuedMessages = [];\n\n    this.debug(`Will try sending queued messages ${queuedMessages}`);\n\n    for (const queuedMessage of queuedMessages) {\n      this.debug(`Attempting to send ${queuedMessage}`);\n      this.publish(queuedMessage.queueName, queuedMessage.message, queuedMessage.headers);\n    }\n  }\n\n  /**\n   * Subscribe to server message queues\n   *\n   * This method can safely be called even when STOMP broker is not connected. Further\n   * if the underlying STOMP connection drops and reconnects, it will resubscribe transparently.\n   *\n   * If a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\n   * do not understand what it means, please leave it as is.\n   *\n   * Please note, however, while working with temporary queues, where the subscription request\n   * creates the\n   * underlying queue, during reconnect it might miss messages. This issue is not specific\n   * to this library but the way STOMP brokers are designed to work.\n   *\n   * @param queueName\n   * @param headers\n   * @returns {Observable}\n   */\n  public subscribe(queueName: string, headers: StompHeaders = {}): Observable {\n\n    /* Well the logic is complicated but works beautifully. RxJS is indeed wonderful.\n     *\n     * We need to activate the underlying subscription immediately if Stomp is connected. If not it should\n     * subscribe when it gets next connected. Further it should re establish the subscription whenever Stomp\n     * successfully reconnects.\n     *\n     * Actual implementation is simple, we filter the BehaviourSubject 'state' so that we can trigger whenever Stomp is\n     * connected. Since 'state' is a BehaviourSubject, if Stomp is already connected, it will immediately trigger.\n     *\n     * The observable that we return to caller remains same across all reconnects, so no special handling needed at\n     * the message subscriber.\n     */\n    this.debug(`Request to subscribe ${queueName}`);\n\n    // By default auto acknowledgement of messages\n    if (!headers['ack']) {\n      headers['ack'] = 'auto';\n    }\n\n    const coldObservable = Observable.create(\n      (messages: Observer) => {\n        /*\n         * These variables will be used as part of the closure and work their magic during unsubscribe\n         */\n        let stompSubscription: StompSubscription;\n\n        let stompConnectedSubscription: Subscription;\n\n        stompConnectedSubscription = this.connectObservable\n          .subscribe(() => {\n            this.debug(`Will subscribe to ${queueName}`);\n            stompSubscription = this.client.subscribe(queueName, (message: Stomp.Message) => {\n                messages.next(message);\n              },\n              headers);\n          });\n\n        return () => { /* cleanup function, will be called when no subscribers are left */\n          this.debug(`Stop watching connection state (for ${queueName})`);\n          stompConnectedSubscription.unsubscribe();\n\n          if (this.state.getValue() === StompState.CONNECTED) {\n            this.debug(`Will unsubscribe from ${queueName} at Stomp`);\n            stompSubscription.unsubscribe();\n          } else {\n            this.debug(`Stomp not connected, no need to unsubscribe from ${queueName} at Stomp`);\n          }\n        };\n      });\n\n    /**\n     * Important - convert it to hot Observable - otherwise, if the user code subscribes\n     * to this observable twice, it will subscribe twice to Stomp broker. (This was happening in the current example).\n     * A long but good explanatory article at https://medium.com/@benlesh/hot-vs-cold-observables-f8094ed53339\n     */\n    return coldObservable.share();\n  }\n\n  /**\n   * Handle messages to default queue, it will include any unhandled messages. We can use this for\n   * RPC type communications.\n   */\n  protected setupOnReceive(): void {\n    this.defaultMessagesObservable = new Subject();\n\n    this.client.onreceive = (message: Stomp.Message) => {\n      this.defaultMessagesObservable.next(message);\n    };\n  }\n\n  /**\n   * Emit all receipts.\n   */\n  protected setupReceipts(): void {\n    this.receiptsObservable = new Subject();\n\n    this.client.onreceipt = (frame: Stomp.Frame) => {\n      this.receiptsObservable.next(frame);\n    };\n  }\n\n  /**\n   * Wait for receipt, this indicates that server has carried out the related operation\n   */\n  public waitForReceipt(receiptId: string, callback: () => void): void {\n    this.receiptsObservable.filter((frame: Stomp.Frame) => {\n      return frame.headers['receipt-id'] === receiptId;\n    }).first().subscribe((frame: Stomp.Frame) => {\n      callback();\n    });\n  }\n\n  /**\n   * Callback Functions\n   *\n   * Note the method signature: () => preserves lexical scope\n   * if we need to use this.x inside the function\n   */\n  protected debug = (args: any): void => {\n      console.log(new Date(), args);\n  }\n\n  /** Callback run on successfully connecting to server */\n  protected on_connect = (frame: Frame) => {\n\n    this.debug('Connected');\n\n    this._serverHeadersBehaviourSubject.next(frame.headers);\n\n    // Indicate our connected state to observers\n    this.state.next(StompState.CONNECTED);\n  }\n\n  /** Handle errors from stomp.js */\n  protected on_error = (error: string | Stomp.Message) => {\n\n    // Trigger the error subject\n    this.errorSubject.next(error);\n\n    if (typeof error === 'object') {\n      error = (error).body;\n    }\n\n    this.debug(`Error: ${error}`);\n\n    // Check for dropped connection and try reconnecting\n    if (!this.client.connected) {\n      // Reset state indicator\n      this.state.next(StompState.CLOSED);\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Angular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(config: StompConfig)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/stomp.service.ts:20\n                                        \n                                    \n            \n                            \n                                \n                                        Constructor\n            See README and samples for configuration examples\n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              config\n                                                              \n                                                                        StompConfig\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompHeaders\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-headers.ts\n    \n            \n                \n                    \n                        \n                            \n                            StompHeaders\n                        \n                    \n                        \n                            \n                                Type definition for Headers \n    \n                            \n                        \n                    \n                        \n                            StompHeaders:     literal type\n    \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompState\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-state.ts\n    \n            \n                \n                    \n                        \n                            \n                            StompState\n                        \n                    \n                        \n                            \n                                Possible states for the STOMP service\n    \n                            \n                        \n                            \n                                \n                                     CLOSED\n                                \n                            \n                            \n                                \n                                     TRYING\n                                \n                            \n                            \n                                \n                                     CONNECTED\n                                \n                            \n                            \n                                \n                                     DISCONNECTING\n                                \n                            \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/stomp-r.service.ts\n            \n            \n                injectable\n            \n            \n                StompRService\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    src/stomp.config.ts\n            \n            \n                injectable\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/stomp.service.ts\n            \n            \n                injectable\n            \n            \n                StompService\n            \n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/sock-js.html":{"url":"additional-documentation/sock-js.html","title":"additional-page - Sock JS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing with SockJS\nSee sample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\nNotes\n\nIt is an initial release.\nInstead of a url in the default form, you need \nto pass it as a socketProvider function. It will be streamlined in a\nfuture release.\nPlease read notes on SockJS support of the underlying library at\nhttps://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nUsage\nInstall SockJS Client\n$ npm install sockjs-client --saveImport SockJS class\nimport * as SockJS from 'sockjs-client';Implement a socketProvider\nCreate a function that returns an object similar to WebSocket (typically SockJS instance).\nexport function socketProvider() {\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}StompConfig\nPass the function as url in StompConfig.\n It will work even\nthough name of the parameter is url, don't worry :)\nExample:\nconst stompConfig: StompConfig = {\n  // Which server?\n  url: socketProvider,\n\n  // Headers\n  // Typical keys: login, passcode, host\n  headers: {\n    login: 'guest',\n    passcode: 'guest'\n  },\n\n  // How frequent is the heartbeat?\n  // Interval in milliseconds, set to 0 to disable\n  heartbeat_in: 0, // Typical value 0 - disabled\n  heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n  // Wait in milliseconds before attempting auto reconnect\n  // Set to 0 to disable\n  // Typical value 5000 (5 seconds)\n  reconnect_delay: 5000,\n\n  // Will log diagnostics on console\n  debug: true\n};\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contributing.html":{"url":"additional-documentation/contributing.html","title":"additional-page - Contributing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributing\nDevelopment\nAfter checking out from GitHub, install the dependencies:\n$ npm installor, if using yarn:\n$ yarnTo generate documentation:\n$ npm run docTo lint all *.ts files:\n$ npm run lint\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
